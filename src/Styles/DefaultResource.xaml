<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 팔레트 -->
    <SolidColorBrush x:Key="DG.Foreground"        Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DG.HeaderForeground"  Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DG.HoverOverlay"      Color="#1AFFFFFF"/>
    <!-- 10% 흰색 -->
    <SolidColorBrush x:Key="DG.SelectOverlay"     Color="#330767B3"/>
    <!-- 20% 하이라이트 -->
    <SolidColorBrush x:Key="DG.Separator"         Color="#FF16233B"/>
    <!-- 구분선 색상 -->

    <SolidColorBrush x:Key="Btn.Bg"           Color="#223149"/>
    <!-- 기본: #18253D 보다 밝음 -->
    <SolidColorBrush x:Key="Btn.Bg.Hover"     Color="#2A3D5C"/>
    <!-- 호버: 조금 더 밝게 -->
    <SolidColorBrush x:Key="Btn.Bg.Pressed"   Color="#1A2942"/>
    <!-- 눌림: 살짝 어둡게 -->
    <SolidColorBrush x:Key="Btn.Fg"           Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Btn.DisabledBg"   Color="#141F35"/>
    <SolidColorBrush x:Key="Btn.DisabledFg"   Color="#80FFFFFF"/>
    <SolidColorBrush x:Key="Brush.Panel"                 Color="#FF0B1628"/>
    <!-- 기존 -->

    <!-- TextBox 팔레트 -->
    <SolidColorBrush x:Key="Brush.Input.Bg"              Color="#14233B"/>
    <!-- 패널보다 한 톤 밝음 -->
    <SolidColorBrush x:Key="Brush.Input.Border"          Color="#16233B"/>
    <!-- 기본 테두리(구분선 톤과 통일) -->
    <SolidColorBrush x:Key="Brush.Input.Border.Hover"    Color="#1D2E4A"/>
    <!-- Hover -->
    <SolidColorBrush x:Key="Brush.Input.Border.Focus"    Color="#0767B3"/>
    <!-- Focus(액센트) -->
    <SolidColorBrush x:Key="Brush.Input.Fg"              Color="#FFFFFFFF"/>
    <!-- 본문 글자 -->
    <SolidColorBrush x:Key="Brush.Input.Fg.Muted"        Color="#B3FFFFFF"/>
    <!-- 힌트/보조 -->
    <SolidColorBrush x:Key="Brush.Input.Selection"       Color="#2A86D7"/>
    <!-- 선택 영역 -->


    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="Button"
       BasedOn="{StaticResource MahApps.Styles.Button}">
        <Setter Property="Background" Value="{StaticResource Btn.Bg}"/>
        <Setter Property="Foreground" Value="{StaticResource Btn.Fg}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                   Foreground="White"
                   FontWeight="Bold"
                   FontSize="14"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Btn.Bg.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Btn.Bg.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Btn.DisabledBg}"/>
                            <Setter Property="Foreground" Value="{StaticResource Btn.DisabledFg}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="#223149"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="#101B30"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="14,8"/>
        <Setter Property="Background" Value="#18253D"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style x:Key="TextBox.Rounded.Panel" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource Brush.Input.Bg}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Input.Fg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Input.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Brush.Input.Selection}"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>

        <!-- 둥근 모서리를 위한 템플릿 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">   
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Brush.Input.Border.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Brush.Input.Border.Focus}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Brush.Input.Fg.Muted}"/>
                            <Setter TargetName="Bd" Property="Background" Value="#101B30"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#233552"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 라운드 5 패널 -->
    <Style x:Key="Panel.Radius5" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Margin" Value="10"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- 제목 바 + 내용 영역이 있는 패널 -->
    <Style x:Key="TitledBox" TargetType="{x:Type GroupBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="#101B30"/>

        <!-- 헤더(제목) 텍스트 기본 모양 -->
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="#FFFFFFFF"
                               FontWeight="Bold"
                               FontSize="22"
                               Padding="10,20,0,10"
                               TextOptions.TextRenderingMode="Grayscale"
                               TextOptions.TextFormattingMode="Display"
                               TextOptions.TextHintingMode="Fixed"
                               SnapsToDevicePixels="True"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="True">
                        <!-- 바깥 테두리 -->
                        <Border CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"/>   

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- 상단 제목 바 -->
                            <Border Grid.Row="0"
                              Background="#101C30"
                              CornerRadius="5,5,0,0">
                                <ContentPresenter ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  VerticalAlignment="Center"
                                                  Margin="4,0"/>
                            </Border>

                            <!-- 내용 영역 -->
                            <Border Grid.Row="1"
                                    CornerRadius="0,0,5,5"
                                    Background="{TemplateBinding Background}"
                                    Padding="8">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    

    <!-- 1) 컬럼 헤더 -->
    <Style x:Key="DataGrid.ColumnHeader.Transparent" TargetType="DataGridColumnHeader">
        <!-- 글꼴 기본값(상속도 유지) -->
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource DG.HeaderForeground}"/>

        <!-- 콘텐츠를 직접 템플릿으로 감싸서 확실히 적용 -->
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!-- Header가 문자열일 때 바로 바인딩됨 -->
                    <TextBlock Text="{Binding}"
                               FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}}"
                               FontWeight="Bold"
                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}}"
                               TextOptions.TextRenderingMode="Grayscale"
                               TextOptions.TextFormattingMode="Display"
                               TextOptions.TextHintingMode="Fixed"
                               SnapsToDevicePixels="True"
                               Padding="0"/>
                    <!-- 패딩은 아래 Header Padding으로 통일 -->
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <!-- 헤더 바탕/구분선/패딩 등 -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SeparatorBrush" Value="{StaticResource DG.Separator}"/>
        <!-- 헤더 사이 구분선 -->
        <Setter Property="BorderBrush" Value="{StaticResource DG.Separator}"/>
        <!-- 헤더 하단 라인 -->
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <!-- 하단만 1px -->
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
    </Style>


    <!-- 2) 셀 -->
    <Style x:Key="DataGrid.Cell.Transparent" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="6,3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DG.HoverOverlay}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DG.SelectOverlay}"/>
                <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 3) 행 -->
    <Style x:Key="DataGrid.Row.Transparent" TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DG.SelectOverlay}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- 4) DataGrid 본체 -->
    <Style x:Key="DataGrid.Transparent" TargetType="DataGrid">
        <Style.Resources>
            <!-- 보기용 셀(TextBlock) -->
            <Style TargetType="TextBlock" BasedOn="{x:Null}">
                <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
            </Style>
            <!-- 편집용 셀(TextBox) -->
            <Style TargetType="TextBox" BasedOn="{x:Null}">
                <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Style.Resources>

        <!-- 기존 세터들 그대로 -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DG.Separator}"/>
        <Setter Property="VerticalGridLinesBrush"   Value="{StaticResource DG.Separator}"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGrid.ColumnHeader.Transparent}"/>
        <Setter Property="CellStyle" Value="{StaticResource DataGrid.Cell.Transparent}"/>
        <Setter Property="RowStyle"  Value="{StaticResource DataGrid.Row.Transparent}"/>
    </Style>


</ResourceDictionary>