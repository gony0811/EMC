<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:EMC">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/01 SYSTEM/Common/Styles/Palette.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style x:Key="GroupBox.CenterHeader" TargetType="GroupBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border.Bg}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Padding" Value="10"/>
        <!-- 내부 패딩 기본값 -->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <!-- ✅ 2행 구성: 0=Header, 1=Content -->
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- 🔹 Header -->
                        <Border Grid.Row="0"
                            Background="{TemplateBinding BorderBrush}"
                            CornerRadius="6, 6, 0, 0"
                            Height="36"
                            Effect="{DynamicResource Shadow.Small}">
                            <TextBlock Text="{TemplateBinding Header}"
                                   FontWeight="SemiBold"
                                   FontSize="18"
                                   Foreground="{TemplateBinding Foreground}"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                        </Border>

                        <!-- 🔹 Content -->
                        <Border Grid.Row="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="Button">
        <Setter Property="Background"   Value="{StaticResource Btn.Bg}"/>
        <Setter Property="Foreground"   Value="{StaticResource Btn.Fg}"/>
        <Setter Property="BorderBrush"  Value="Transparent"/>
        <Setter Property="FontWeight"   Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">

                        <ContentPresenter
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              RecognizesAccessKey="True"
                              TextElement.Foreground="{TemplateBinding Foreground}"
                              TextElement.FontWeight="{TemplateBinding FontWeight}"
                              TextElement.FontSize="14"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Opacity" Value=".8"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Opacity" Value=".5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Btn.DisabledBg}"/>
                            <Setter Property="Foreground" Value="{StaticResource Btn.DisabledFg}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox 기본 스타일 -->
    <Style TargetType="ComboBox" x:Key="RoundedComboBox">
        <Setter Property="Background" Value="{StaticResource Btn.Bg}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource Btn.Bg}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,3"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"/>

                        <Grid Margin="4,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0"
                                          Margin="4,0,4,0"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                            <ToggleButton Grid.Column="1"
                                      x:Name="DropDownToggle"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Background="Transparent"
                                      BorderThickness="0"
                                      Cursor="Hand"
                                      VerticalAlignment="Stretch"
                                      HorizontalAlignment="Right"
                                      Width="22"
                                      Margin="0,0,2,0">
                                <Grid>
                                    <Path VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="White"
                                      Width="8" Height="5"/>
                                </Grid>
                            </ToggleButton>
                        </Grid>

                        <!-- Popup 내부 수정 -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           Focusable="False"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           PopupAnimation="Slide"
                           MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                SnapsToDevicePixels="True">
                                <ScrollViewer Margin="2" SnapsToDevicePixels="True">
                                    <!-- ✅ ItemsPresenter로 변경 -->
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <!-- ✅ ItemsPresenter fallback -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PART_Popup" Property="MinHeight" Value="20"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Btn.Bg.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <!-- Popup이 ItemsPresenter와 연결되도록 설정 -->
                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Btn.Bg.Hover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RoundButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Btn.Bg}"/>
        <Setter Property="Foreground" Value="{StaticResource Btn.Fg}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="White"
                               FontWeight="Bold"
                               FontSize="14"/>  
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8"
                    SnapsToDevicePixels="True">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Btn.Bg.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Btn.Bg.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource Btn.DisabledBg}"/>
                            <Setter Property="Foreground" Value="{StaticResource Btn.DisabledFg}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBox.Rounded.Panel" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource Brush.Input.Bg}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Input.Fg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Input.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Brush.Input.Selection}"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>

        <!-- 둥근 모서리를 위한 템플릿 -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">   
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Brush.Input.Border.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Brush.Input.Border.Focus}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Brush.Input.Fg.Muted}"/>
                            <Setter TargetName="Bd" Property="Background" Value="#101B30"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#233552"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Toggle.Switch" TargetType="ToggleButton" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{StaticResource Btn.Bg}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="track"
                        Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        SnapsToDevicePixels="True">
                        <!-- ✅ ContentPresenter로 콘텐츠 표시 -->
                        <ContentPresenter
                        Margin="{TemplateBinding Padding}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="track" Property="Opacity" Value="0.95"/>
                        </Trigger>

                        <!-- Pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="track" Property="Opacity" Value="0.9"/>
                        </Trigger>

                                    <!-- ✅ 토글 상태 색상 -->
                        <Trigger Property="IsChecked" Value="True">
                                     <!-- 팔레트에 맞춰 교체하세요 -->
                            <Setter TargetName="track" Property="Background" Value="{StaticResource Switch.Track.On}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="track" Property="Background" Value="{StaticResource Btn.Bg}"/>
                        </Trigger>

                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="track" Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 라운드 5 패널 -->
    <Style x:Key="Panel.Radius5" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Panel}"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Margin" Value="10"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- 제목 바 + 내용 영역이 있는 패널 -->
    <Style x:Key="TitledBox" TargetType="{x:Type GroupBox}">
        <Setter Property="Background" Value="#101B30"/>

        <!-- 헤더(제목) 텍스트 기본 모양 -->
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}"
                               Foreground="#FFFFFFFF"
                               FontWeight="Bold"
                               FontSize="22"
                               TextOptions.TextRenderingMode="Grayscale"
                               TextOptions.TextFormattingMode="Display"
                               TextOptions.TextHintingMode="Fixed"
                               SnapsToDevicePixels="True"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="True">
                        <!-- 바깥 테두리 -->
                        <Border CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"/>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- 상단 제목 바 -->
                            <Border Grid.Row="0"
                              Background="#101C30"
                              CornerRadius="5,5,0,0">
                                <ContentPresenter ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  VerticalAlignment="Center"/>
                            </Border>

                            <!-- 내용 영역 -->
                            <Border Grid.Row="1"
                                    CornerRadius="0,0,5,5"
                                    Background="{TemplateBinding Background}"
                                    >
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 1) 컬럼 헤더 -->
    <Style x:Key="DataGrid.ColumnHeader.Transparent" TargetType="DataGridColumnHeader">
        <!-- 글꼴 기본값(상속도 유지) -->
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource DG.HeaderForeground}"/>

        <!-- 콘텐츠를 직접 템플릿으로 감싸서 확실히 적용 -->
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <!-- Header가 문자열일 때 바로 바인딩됨 -->
                    <TextBlock Text="{Binding}"
                               FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}}"
                               FontWeight="Bold"
                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}}"
                               TextOptions.TextRenderingMode="Grayscale"
                               TextOptions.TextFormattingMode="Display"
                               TextOptions.TextHintingMode="Fixed"
                               SnapsToDevicePixels="True"
                               Padding="0"/>
                    <!-- 패딩은 아래 Header Padding으로 통일 -->
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <!-- 헤더 바탕/구분선/패딩 등 -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SeparatorBrush" Value="{StaticResource DG.Separator}"/>
        <!-- 헤더 사이 구분선 -->
        <Setter Property="BorderBrush" Value="{StaticResource DG.Separator}"/>
        <!-- 헤더 하단 라인 -->
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <!-- 하단만 1px -->
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
    </Style>


    <!-- 2) 셀 -->
    <Style x:Key="DataGrid.Cell.Transparent" TargetType="DataGridCell">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="6,3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DG.HoverOverlay}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DG.SelectOverlay}"/>
                <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 3) 행 -->
    <Style x:Key="DataGrid.Row.Transparent" TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource DG.SelectOverlay}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- 4) DataGrid 본체 -->
    <Style x:Key="DataGrid.Transparent" TargetType="DataGrid">
        <Style.Resources>
            <!-- 보기용 셀(TextBlock) -->
            <Style TargetType="TextBlock" BasedOn="{x:Null}">
                <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
                <Setter Property="TextOptions.TextRenderingMode" Value="Grayscale"/>
                <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
            </Style>
            <!-- 편집용 셀(TextBox) -->
            <Style TargetType="TextBox" BasedOn="{x:Null}">
                <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
        </Style.Resources>

        <!-- 기존 세터들 그대로 -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource DG.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DG.Separator}"/>
        <Setter Property="VerticalGridLinesBrush"   Value="{StaticResource DG.Separator}"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGrid.ColumnHeader.Transparent}"/>
        <Setter Property="CellStyle" Value="{StaticResource DataGrid.Cell.Transparent}"/>
        <Setter Property="RowStyle"  Value="{StaticResource DataGrid.Row.Transparent}"/>
    </Style>


    <!-- Border Style -->
    <Style x:Key="ValueBorder" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Palette.DeepDark.Blue}"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="Padding" Value="4,0,0,0"></Setter>
    </Style>

    <Style x:Key="MotorButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Btn.Bg}"></Setter>
    </Style>

    <!-- ✅ TabControl 전체 스타일 -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{StaticResource Btn.Bg}"/>
        
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- 🔹 탭 헤더 영역 -->
                        <TabPanel x:Name="HeaderPanel"
                              Grid.Row="0"
                              IsItemsHost="True"
                              Background="{TemplateBinding Background}"
                              Panel.ZIndex="1"
                              HorizontalAlignment="Left" />

                        <!-- 🔹 탭 내용 영역 -->
                        <Border Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="#2E4466"
                            BorderThickness="1">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ✅ TabItem 스타일 -->
    <Style TargetType="TabItem">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="16,6"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="#223149"/>
        <Setter Property="BorderBrush" Value="#2E4466"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Bd"
                        CornerRadius="8,8,0,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="ContentSite"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#385379"/>
                        </Trigger>

                        <!-- 선택됨 -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#3A7AFE"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#3A7AFE"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Panel.ZIndex" Value="100"/>
                        </Trigger>

                        <!-- 비활성화 -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- 공통 셀 스타일 -->
    <Style x:Key="Cell" TargetType="Border">
        <Setter Property="BorderBrush" Value="#3C4A52"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
    </Style>
    <!-- 헤더 셀 -->
    <Style x:Key="HeaderCell" TargetType="Border" BasedOn="{StaticResource Cell}">
        <Setter Property="Background" Value="#2B3339"/>
    </Style>
    <!-- 텍스트 스타일(옵션) -->
    <Style x:Key="HeaderText" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="#E6FFFFFF"/>
    </Style>
    <Style x:Key="ValueText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#E6FFFFFF"/>
    </Style>

</ResourceDictionary>