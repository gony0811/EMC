<Window x:Class="EGGPLANT._12_SUB_UI.AlarmWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:shell="http://schemas.microsoft.com/winfx/2008/xaml/presentation/shell"
        xmlns:local="clr-namespace:EGGPLANT._12_SUB_UI"
        WindowStyle="None"
        ResizeMode="CanResize"
        WindowStartupLocation="CenterOwner"
        Background="#0B1628"
        MinWidth="420" MinHeight="240"
        Title="Alarm">
    
    <Window.Resources>
        <!-- 팔레트 -->
        <SolidColorBrush x:Key="Col.Primary" Color="#0767B3"/>
        <SolidColorBrush x:Key="Col.Primary.Hover" Color="#0A7FD9"/>
        <SolidColorBrush x:Key="Col.Primary.Pressed" Color="#065A8A"/>

        <SolidColorBrush x:Key="Col.Secondary" Color="#1F2D47"/>
        <SolidColorBrush x:Key="Col.Secondary.Hover" Color="#27395A"/>
        <SolidColorBrush x:Key="Col.Secondary.Pressed" Color="#1A263D"/>

        <SolidColorBrush x:Key="Col.Danger" Color="#E74C3C"/>
        <SolidColorBrush x:Key="Col.Danger.Hover" Color="#F06152"/>
        <SolidColorBrush x:Key="Col.Danger.Pressed" Color="#C44134"/>

        <!-- 공통 버튼 템플릿 (전역 스타일 간섭 방지) -->
        <Style x:Key="DialogButton" TargetType="Button" BasedOn="{x:Null}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource Col.Secondary}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="14,10"/>
            <Setter Property="MinWidth" Value="88"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" CornerRadius="8"
                    Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource Col.Secondary.Hover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource Col.Secondary.Pressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="bd" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 변형: Primary / Danger -->
        <Style x:Key="DialogButton.Primary" TargetType="Button" BasedOn="{StaticResource DialogButton}">
            <Setter Property="Background" Value="{StaticResource Col.Primary}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" CornerRadius="8" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource Col.Primary.Hover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource Col.Primary.Pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DialogButton.Danger" TargetType="Button" BasedOn="{StaticResource DialogButton}">
            <Setter Property="Background" Value="{StaticResource Col.Danger}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="bd" CornerRadius="8" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource Col.Danger.Hover}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{StaticResource Col.Danger.Pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 액션 아이템 -> 버튼 템플릿 -->
        <DataTemplate x:Key="ActionTemplate" DataType="{x:Type local:AlarmAction}">
            <Button Content="{Binding Text}"
              Command="{Binding Command}"
              CommandParameter="{Binding CommandParameter}"
              IsDefault="{Binding IsDefault}"
              IsCancel="{Binding IsCancel}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DialogButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static local:ActionKind.Primary}">
                                <Setter Property="Style" Value="{StaticResource DialogButton.Primary}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static local:ActionKind.Danger}">
                                <Setter Property="Style" Value="{StaticResource DialogButton.Danger}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- 타이틀바 -->
            <RowDefinition Height="*"/>
            <!-- 본문/설명 -->
            <RowDefinition Height="Auto"/>
            <!-- 버튼 영역 -->
        </Grid.RowDefinitions>

        <!-- 타이틀바 -->
        <Border Grid.Row="0" Background="#101C30" Height="40">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding TitleText, RelativeSource={RelativeSource AncestorType=Window}}"
                   Foreground="White" FontSize="16" FontWeight="SemiBold"
                   VerticalAlignment="Center" Margin="12,0"/>

            </Grid>
        </Border>

        <!-- 설명 -->
        <ScrollViewer Grid.Row="1" Margin="16,12,16,8"
                  VerticalScrollBarVisibility="Auto">
            <TextBlock Text="{Binding MessageText, RelativeSource={RelativeSource AncestorType=Window}}"
                 TextWrapping="Wrap" Foreground="White" FontSize="14"/>
        </ScrollViewer>

        <!-- 버튼들 -->
        <Border Grid.Row="2" Background="#0F1A2E" Padding="12,10">
            <ItemsControl ItemsSource="{Binding Actions, RelativeSource={RelativeSource AncestorType=Window}}"
                    ItemTemplate="{StaticResource ActionTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel HorizontalAlignment="Right" ItemHeight="44" ItemWidth="Auto"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="FrameworkElement">
                        <Setter Property="Margin" Value="6,0,0,0"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Border>
    </Grid>
</Window>
